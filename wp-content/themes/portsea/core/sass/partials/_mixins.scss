$light_blue: #185B9F;

$grey: #E6E6E8;

$white: #FFFFFF;

$blue: #00549c;
$dark_blue: #012C54;
$light_blue: #1D83D4;

$green: #00AA57;


$light_black: #282828;
$mid_black: #0F0F0F;
$black: #000;

$pink: #C60068;

$green: #278110; //Main Theme color

$yellow: #DDAA08;

$get_involved_bg_colour: #0a3d79;
$afl_red: #F10036;

$slick-border-width: 4px;



$fb: #3B5998;
$tw: #00ACED;
$ig: #675144;
$yt: #C4302B;




$bold: 700;


$container_sm: 750px;
$container_md: 970px;
$container_lg: 1155px;


$skew: -10deg;
$skewback: 10deg;

@mixin featured-font(){
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: 'Open Sans',sans-serif;
  font-weight: 500;
  letter-spacing: 0px;
}

@mixin featured-font-light(){
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: 'Open Sans',sans-serif;
  font-weight: 300;
}

@mixin featured-font-bold(){
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: 'Open Sans',sans-serif;
  font-weight: 700;
  // font-style: italic;
}

@mixin featured-font-400(){
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: 'Open Sans',sans-serif;
  font-weight: 400;
}

@mixin featured-font-bold-em(){
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: 'Open Sans',sans-serif;
  font-weight: 900;
  
}

@mixin body-font(){
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: antialiased;
  font-family: 'Open Sans',sans-serif;
  font-weight: 300;
}

@mixin body-font-bold(){
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: antialiased;
  font-family: 'Open Sans',sans-serif;
  font-weight: 700;
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

@mixin heading-lg() {
 // text-align: center;
  //padding: 50px 0;
  @include featured-font;
  text-transform: uppercase;
  @include breakpoint(xs){
    //font-size: 32px;
    padding: 20px 0;
  }
 
}

@mixin rowMachine($numPerRow, $margin) {
  width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
  &:nth-child(n) {
    margin-bottom: $margin;
    margin-right: $margin;
  }
  &:nth-child(#{$numPerRow}n) {
    margin-right: 0;
    margin-bottom: 0;
  }
}

@mixin rowMachine_sr($numPerRow, $margin) {
  width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
  &:nth-child(n) {
    margin-right: $margin;
  }
  &:nth-child(#{$numPerRow}n) {
    margin-right: 0;
  }
}

@mixin rowMachineTypeOf($numPerRow, $margin) {
  width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
  &:nth-of-type(n) {
    margin-bottom: $margin;
    margin-right: $margin;
  }
  &:nth-of-type(#{$numPerRow}n) {
    margin-right: 0;
    margin-bottom: 0;
  }
}

@mixin rowMachineImportant($numPerRow, $margin) {
  width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow) !important;
  &:nth-child(n) {
    margin-bottom: $margin !important;
    margin-right: $margin !important;
  }
  &:nth-child(#{$numPerRow}n) {
    margin-right: 0 !important;
    margin-bottom: 0 !important;
  }
}

@mixin thumbs($numPerRow, $margin){
  padding: 0;
  margin: 0;
  li {
    float: left;
    display: inline-block;
    @include rowMachine($numPerRow, $margin)
  }
}


@mixin thumbs_sr($numPerRow, $margin){
  padding: 0;
  margin: 0;
  li {
    float: left;
    display: inline-block;
    @include rowMachine_sr($numPerRow, $margin)
  }
}



@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin center() {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin center-verticle() {
  position: absolute;
  top: 50%;
  transform: translate(0, -50%);
}

@mixin center-verticle-list() {
  position: relative;
  margin-top: 50%;
  margin-bottom: -50%;
  transform: translate(0, -50%);
}

@mixin center-horizontal() {
  position: absolute;
  left: 50%;
  transform: translate( -50%, 0);
}


@mixin linear-gradient($fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient(top, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}


@mixin webfont() {
  font-family: "webfont";
  font-style: normal;
  font-weight: normal;
    -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin hide-text() {
  overflow: hidden;
  white-space: nowrap;
  text-indent: -2000px;
}


@mixin reduce-sprite-size($sprite, $dividedBy){
  background-size: (nth($sprite, 7) / $dividedBy) (nth($sprite, 8) / $dividedBy)
}

@mixin reduce-sprite-position($sprite, $dividedBy ){
  $sprite-offset-x: nth($sprite, 3) / $dividedBy;
  $sprite-offset-y: nth($sprite, 4) / $dividedBy;
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin reduce-sprite-width($sprite, $dividedBy){
  width: nth($sprite, 5) / $dividedBy;
}

@mixin reduce-sprite-height($sprite, $dividedBy){
  height: nth($sprite, 6) / $dividedBy;
}



@mixin reduce-sprite($sprite, $dividedBy) {
  @include sprite-image($sprite);
  @include reduce-sprite-size($sprite, $dividedBy);
  @include reduce-sprite-position($sprite, $dividedBy);
  @include reduce-sprite-width($sprite, $dividedBy);
  @include reduce-sprite-height($sprite, $dividedBy);
}


@mixin breakpoint($point) {
  @if $point == mini {
    @media (max-width: 650px) { @content; }
}


  // Main Media Queries
   @else if $point == xxxs {
    @media (max-width: 320px) { @content; }
  }
   @else if $point == xxs {
    @media (max-width: 480px) { @content; }
  }
  @else if $point == xs {
    @media (max-width: 767px) { @content; }
  }
  @else if $point == sm {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == xs-sm {
    @media (max-width: 767px) , (min-width: 768px)  { @content; }
  }
  @else if $point == md {
    @media (min-width: 992px) { @content; }
  }
  @else if $point == lg {
    @media (min-width: 1200px)  { @content; }
  }
  @else if $point == xlg {
    @media (min-width: 1858px)  { @content; }
  }
  @else if $point == md-lg {
    @media (min-width: 992px) , (min-width: 1200px)  { @content; }
  }
// Other Media Queries

  @else if $point == ipad-portrait {
    @media only screen 
    and (min-device-width : 768px) 
    and (max-device-width : 1024px) 
    and (orientation : portrait)
    and (-webkit-min-device-pixel-ratio: 1)  { @content; }
  }
  // iPhone 5 portrait
  @else if $point == iphone5-port {
    @media only screen 
    and (min-device-width : 320px) 
    and (max-device-width : 568px) 
    and (orientation : portrait) { @content; }
  }
  // iPhone 5 landscape
  @else if $point == iphone5-land {
    @media only screen 
    and (min-device-width : 320px) 
    and (max-device-width : 568px) 
    and (orientation : landscape) { @content; }
  }
  @else if $point == tablet-portrait {
    @media only screen 
    and (min-width : 200px) 
    and (max-width : 992px) { @content; }
  }
  @else if $point == xs-ls {
    @media only screen 
    and (max-width : 420px) { @content; }
  }
}